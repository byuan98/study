package controller;

import java.io.File;
import java.io.IOException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import entity.Student;

@Controller
@RequestMapping("/test3")
public class TestThree {
//    实现SpringMVC文件上传方式1:用servlet中的方式完全可以
//    实现SpringMVC文件上传方式2:使用@RequestParam("photo")MultipartFile file来接受文件域
    @RequestMapping(value="/upload.action",produces="application/json;charset=utf-8")
    @ResponseBody
    public String uploadMethod(@RequestParam("photo")MultipartFile file, Student stu, HttpServletRequest req) {
        System.out.println(stu);//通过stu的属性,接受普通组件
//        通过@RequestParam("photo")MultipartFile file来接受name=photo的文件域
        String fileName=file.getOriginalFilename();//获取文件名
        System.out.println("fileName="+fileName);
//        把文件保存到指定的目录下
//        获取web.xml初始化参数中指定的目录
        String uploadPath=req.getServletContext().getInitParameter("uploadPath");
        File muLu=new File(uploadPath);
        if(!muLu.exists()) {
            muLu.mkdirs();
        }
//        创建目的文件
        File muDiFile=new File(muLu, System.currentTimeMillis()+fileName);
        try {
            file.transferTo(muDiFile);
        } catch (IllegalStateException e) {
            throw new RuntimeException();
        } catch (IOException e) {
            throw new RuntimeException();
        }//将file关联的源文件中的所有信息写到参数目标文件中
        return "上传"+fileName+"成功！";
    }
}
