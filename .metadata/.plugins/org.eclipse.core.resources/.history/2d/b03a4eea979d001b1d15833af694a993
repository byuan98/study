package test;

public class TestTwo {

    public static void main(String[] args) {
        Teacher teacher=new Teacher();
        TeacherProxy teacherProxy=new TeacherProxy(teacher);
        teacher.add(1, 3);
        teacherProxy.work();
        teacherProxy.add(1, 3);

    }

}

interface Person{//1、创建接口
    public Integer add(Integer number1, Integer number2);
    public void work();
}

class Teacher implements Person{//2、创建接口的实现类
    public Integer add(Integer number1, Integer number2) {
        System.out.println("老师正在计算"+number1+"与"+number2+"的和");
        return number1+number2;
    }
    public void work() {
        System.out.println("老师正在努力工作");
    }
}

class TeacherProxy implements Person{//3、创建代理类，实现与目标类相同的接口
    private Person target;
    TeacherProxy(Person target){//4、通过构造方法的参数列表与目标对象关联
        this.target=target;
    }
//    5、在代理类的方法中调用目标对象的方法 并对方法进行扩展
    public Integer add(Integer number1, Integer number2) {
        System.out.println("请看清题目");
        return target.add(number1, number2);
    }
    public void work() {
        target.work();
        System.out.println("注意身体,劳逸结合！");
    }
}

