package test;

import java.util.concurrent.Callable;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.FutureTask;

public class TestOne {

    public static void main(String[] args) {
        MyRunnable myRunnable=new MyRunnable();
        MyCallable myCallable=new MyCallable();
        ExecutorService executorService=Executors.newFixedThreadPool(2);
        executorService.execute(myRunnable);
        executorService.submit(myCallable);
        executorService.shutdown();


    }
}
class MyRunnable implements Runnable{
    public void run() {
        Integer sum=0;
        for(Integer number=1;number<=100;number++) {
            try {
                Thread.sleep(100);
            } catch (InterruptedException e) {
                throw new RuntimeException();
            }
            System.out.println("创建线程方式4.1:"+(sum+=number));
        }
    }
}

class MyCallable implements Callable<Integer>{
    public Integer call() throws Exception {
        Integer sum=0;
        for(Integer number=1;number<=100;number++) {
            Thread.sleep(100);
            System.out.println("创建线程方式4.2:"+(sum+=number));
        }
        return sum;
    } 
}
